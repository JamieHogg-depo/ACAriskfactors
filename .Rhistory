inset_list <- Filter(Negate(is.null), inset_list)
# create final list
lay <- rbind(c(9,1,1,1,1,2),
c(5,1,1,1,1,3),
c(6,1,1,1,1,8),
c(4,10,10,10,10,7))
full_inset_plt <- arrangeGrob(grobs = c(list(base_boxes), inset_list, list(llegend)),
layout_matrix  = lay)
plot(full_inset_plt)
this <- global_obj$census$PC1-min(global_obj$census$PC1)
map_sa2$pc1 <- this/max(this); rm(this)
rr <- unname(quantile(map_sa2$pc1, p = c(0.01,0.99)))
# base map
base <- map_sa2 %>%
ggplot()+
theme_void()+
geom_sf(aes(fill = pc1), col = NA)+
scale_fill_viridis_c(begin = 0, end = 1,
direction = -1,
option = "D",
limits = rr, oob = squish)+
geom_sf(data = aus_border, aes(geometry = geometry),
colour = "black", fill = NA, size = 0.2)+
geom_sf(data = state_border, aes(geometry = geometry),
colour = "black", fill = NA, size = 0.1)+
theme(legend.position = "none",
text = element_text(size = 8),
plot.title = element_text(margin = margin(0,0,2,0)),
plot.margin = unit(c(1,1,1,1), "mm"))
# Base map with legend
(base_legend <- base +
labs(fill = "SES (Principal component 1)")+
guides(fill = guide_colourbar(barwidth = 15,
title.position = "top",
title.hjust = 0.5))+
theme(legend.position = "bottom"))
llegend <- ggpubr::get_legend(base_legend)
# Base map with boxes
base_boxes <- base
for(i in 1:8){
base_boxes <- base_boxes +
addBoxLabel(i, color = "black", size = 0.2)
}
# Create list of insets
inset_list <- list()
for(i in 1:8){
inset_list[[i]] <- base +
xlim(lims$xmin[i], lims$xmax[i]) +
ylim(lims$ymin[i], lims$ymax[i]) +
labs(title = lims$inset_labs[i])+
theme(panel.border = element_rect(colour = "black", size=1, fill=NA),
plot.title = element_text(margin = margin(0,0,2,0),
size = 6),
plot.margin = unit(c(1,1,1,1), "mm"))
}
inset_list <- Filter(Negate(is.null), inset_list)
# create final list
lay <- rbind(c(9,1,1,1,1,2),
c(5,1,1,1,1,3),
c(6,1,1,1,1,8),
c(4,10,10,10,10,7))
full_inset_plt <- arrangeGrob(grobs = c(list(base_boxes), inset_list, list(llegend)),
layout_matrix  = lay)
plot(full_inset_plt)
# squish the top and lower 2.5 quantiles
this <- global_obj$census$PC1-min(global_obj$census$PC1)
map_sa2$pc1 <- this/max(this); rm(this)
rr <- unname(quantile(map_sa2$pc1, p = c(0.01,0.99)))
# base map
base <- map_sa2 %>%
ggplot()+
theme_void()+
geom_sf(aes(fill = pc1), col = NA)+
scale_fill_viridis_c(begin = 0, end = 1,
direction = 1,
option = "D",
limits = rr, oob = squish)+
geom_sf(data = aus_border, aes(geometry = geometry),
colour = "black", fill = NA, size = 0.2)+
geom_sf(data = state_border, aes(geometry = geometry),
colour = "black", fill = NA, size = 0.1)+
theme(legend.position = "none",
text = element_text(size = 8),
plot.title = element_text(margin = margin(0,0,2,0)),
plot.margin = unit(c(1,1,1,1), "mm"))
# Base map with legend
(base_legend <- base +
labs(fill = "SES (Principal component 1)")+
guides(fill = guide_colourbar(barwidth = 15,
title.position = "top",
title.hjust = 0.5))+
theme(legend.position = "bottom"))
llegend <- ggpubr::get_legend(base_legend)
# Base map with boxes
base_boxes <- base
for(i in 1:8){
base_boxes <- base_boxes +
addBoxLabel(i, color = "black", size = 0.2)
}
# Create list of insets
inset_list <- list()
for(i in 1:8){
inset_list[[i]] <- base +
xlim(lims$xmin[i], lims$xmax[i]) +
ylim(lims$ymin[i], lims$ymax[i]) +
labs(title = lims$inset_labs[i])+
theme(panel.border = element_rect(colour = "black", size=1, fill=NA),
plot.title = element_text(margin = margin(0,0,2,0),
size = 6),
plot.margin = unit(c(1,1,1,1), "mm"))
}
inset_list <- Filter(Negate(is.null), inset_list)
# create final list
lay <- rbind(c(9,1,1,1,1,2),
c(5,1,1,1,1,3),
c(6,1,1,1,1,8),
c(4,10,10,10,10,7))
full_inset_plt <- arrangeGrob(grobs = c(list(base_boxes), inset_list, list(llegend)),
layout_matrix  = lay)
plot(full_inset_plt)
map_sa2 %>% mutate(irsd_5c = irsd_5c) %>%
ggplot()+
theme_void()+
geom_sf(aes(fill = irsd_5c), col = NA)+
geom_sf(data = aus_border, aes(geometry = geometry),
colour = "black", fill = NA, size = 0.2)+
geom_sf(data = state_border, aes(geometry = geometry),
colour = "black", fill = NA, size = 0.1)+
theme(legend.position = "none",
text = element_text(size = 8),
plot.title = element_text(margin = margin(0,0,2,0)),
plot.margin = unit(c(1,1,1,1), "mm"))
map_sa2 %>% mutate(irsd_5c = irsd_5c) %>%
ggplot()+
theme_void()+
geom_sf(aes(fill = ABS_irsd_decile_nation_complete), col = NA)+
geom_sf(data = aus_border, aes(geometry = geometry),
colour = "black", fill = NA, size = 0.2)+
geom_sf(data = state_border, aes(geometry = geometry),
colour = "black", fill = NA, size = 0.1)+
theme(legend.position = "none",
text = element_text(size = 8),
plot.title = element_text(margin = margin(0,0,2,0)),
plot.margin = unit(c(1,1,1,1), "mm"))
modelled_est$summ$sa2_map %>%
ggplot()+
theme_void()+
geom_sf(aes(fill = ABS_irsd_decile_nation_complete), col = NA)+
geom_sf(data = aus_border, aes(geometry = geometry),
colour = "black", fill = NA, size = 0.2)+
geom_sf(data = state_border, aes(geometry = geometry),
colour = "black", fill = NA, size = 0.1)+
theme(legend.position = "none",
text = element_text(size = 8),
plot.title = element_text(margin = margin(0,0,2,0)),
plot.margin = unit(c(1,1,1,1), "mm"))
this <- global_obj$census$PC1-min(global_obj$census$PC1)
map_sa2$pc1 <- this/max(this); rm(this)
rr <- unname(quantile(map_sa2$pc1, p = c(0.025,0.975)))
# base map
base <- map_sa2 %>%
ggplot()+
theme_void()+
geom_sf(aes(fill = pc1), col = NA)+
scale_fill_viridis_c(begin = 0, end = 1,
direction = 1,
option = "D",
limits = rr, oob = squish)+
geom_sf(data = aus_border, aes(geometry = geometry),
colour = "black", fill = NA, size = 0.2)+
geom_sf(data = state_border, aes(geometry = geometry),
colour = "black", fill = NA, size = 0.1)+
theme(legend.position = "none",
text = element_text(size = 8),
plot.title = element_text(margin = margin(0,0,2,0)),
plot.margin = unit(c(1,1,1,1), "mm"))
# Base map with legend
(base_legend <- base +
labs(fill = "SES (Principal component 1)")+
guides(fill = guide_colourbar(barwidth = 15,
title.position = "top",
title.hjust = 0.5))+
theme(legend.position = "bottom"))
llegend <- ggpubr::get_legend(base_legend)
# Base map with boxes
base_boxes <- base
for(i in 1:8){
base_boxes <- base_boxes +
addBoxLabel(i, color = "black", size = 0.2)
}
# Create list of insets
inset_list <- list()
for(i in 1:8){
inset_list[[i]] <- base +
xlim(lims$xmin[i], lims$xmax[i]) +
ylim(lims$ymin[i], lims$ymax[i]) +
labs(title = lims$inset_labs[i])+
theme(panel.border = element_rect(colour = "black", size=1, fill=NA),
plot.title = element_text(margin = margin(0,0,2,0),
size = 6),
plot.margin = unit(c(1,1,1,1), "mm"))
}
inset_list <- Filter(Negate(is.null), inset_list)
# create final list
lay <- rbind(c(9,1,1,1,1,2),
c(5,1,1,1,1,3),
c(6,1,1,1,1,8),
c(4,10,10,10,10,7))
full_inset_plt <- arrangeGrob(grobs = c(list(base_boxes), inset_list, list(llegend)),
layout_matrix  = lay)
plot(full_inset_plt)
map_sa2 %>%
mutate(irsd_5c = irsd_5c) %>%
ggplot()+
theme_void()+
geom_sf(aes(fill = irsd_5c), col = NA)+
geom_sf(data = aus_border, aes(geometry = geometry),
colour = "black", fill = NA, size = 0.2)+
geom_sf(data = state_border, aes(geometry = geometry),
colour = "black", fill = NA, size = 0.1)+
theme(legend.position = "none",
text = element_text(size = 8),
plot.title = element_text(margin = margin(0,0,2,0)),
plot.margin = unit(c(1,1,1,1), "mm"))
base +
labs(fill = "")+
guides(fill = guide_colourbar(barwidth = 15,
title.position = "top",
title.hjust = 0.5))+
theme(legend.position = "bottom"))
base +
labs(fill = "")+
guides(fill = guide_colourbar(barwidth = 15,
title.position = "top",
title.hjust = 0.5))+
theme(legend.position = "bottom")
# base map
base <- map_sa2 %>%
mutate(irsd_5c = irsd_5c) %>%
ggplot()+
theme_void()+
geom_sf(aes(fill = irsd_5c), col = NA)+
geom_sf(data = aus_border, aes(geometry = geometry),
colour = "black", fill = NA, size = 0.2)+
geom_sf(data = state_border, aes(geometry = geometry),
colour = "black", fill = NA, size = 0.1)+
theme(legend.position = "none",
text = element_text(size = 8),
plot.title = element_text(margin = margin(0,0,2,0)),
plot.margin = unit(c(1,1,1,1), "mm"))
base +
labs(fill = "")+
guides(fill = guide_colourbar(barwidth = 15,
title.position = "top",
title.hjust = 0.5))+
theme(legend.position = "bottom")
base +
labs(fill = "")+
theme(legend.position = "bottom")
base <- map_sa2 %>%
mutate(irsd_5c = irsd_5c) %>%
ggplot()+
theme_void()+
geom_sf(aes(fill = irsd_5c), col = NA)+
geom_sf(data = aus_border, aes(geometry = geometry),
colour = "black", fill = NA, size = 0.2)+
geom_sf(data = state_border, aes(geometry = geometry),
colour = "black", fill = NA, size = 0.1)+
theme(legend.position = "none",
text = element_text(size = 8),
plot.title = element_text(margin = margin(0,0,2,0)),
plot.margin = unit(c(1,1,1,1), "mm"))
# Base map with legend
(base_legend <- base +
labs(fill = "")+
theme(legend.position = "bottom"))
llegend <- ggpubr::get_legend(base_legend)
# Base map with boxes
base_boxes <- base
for(i in 1:8){
base_boxes <- base_boxes +
addBoxLabel(i, color = "black", size = 0.2)
}
# Create list of insets
inset_list <- list()
for(i in 1:8){
inset_list[[i]] <- base +
xlim(lims$xmin[i], lims$xmax[i]) +
ylim(lims$ymin[i], lims$ymax[i]) +
labs(title = lims$inset_labs[i])+
theme(panel.border = element_rect(colour = "black", size=1, fill=NA),
plot.title = element_text(margin = margin(0,0,2,0),
size = 6),
plot.margin = unit(c(1,1,1,1), "mm"))
}
inset_list <- Filter(Negate(is.null), inset_list)
# create final list
lay <- rbind(c(9,1,1,1,1,2),
c(5,1,1,1,1,3),
c(6,1,1,1,1,8),
c(4,10,10,10,10,7))
full_inset_plt <- arrangeGrob(grobs = c(list(base_boxes), inset_list, list(llegend)),
layout_matrix  = lay)
plot(full_inset_plt)
irsd <- read_excel("C:/r_proj/two_stage_saemodel_proportions/data/irsd.xlsx") %>%
mutate(ABS_irsd_decile_nation = as.factor(ABS_irsd_decile_nation))
irsd
left_join(irsd, dplyr::select(global_obj$census, SA2, ABS_irsd_decile_nation_complete), by = "SA2")
# base map
base <- map_sa2 %>%
mutate(irsd_5c = irsd_5c) %>%
ggplot()+
theme_void()+
geom_sf(aes(fill = irsd_5c), col = NA)+
geom_sf(data = aus_border, aes(geometry = geometry),
colour = "black", fill = NA, size = 0.2)+
geom_sf(data = state_border, aes(geometry = geometry),
colour = "black", fill = NA, size = 0.1)+
theme(legend.position = "none",
text = element_text(size = 8),
plot.title = element_text(margin = margin(0,0,2,0)),
plot.margin = unit(c(1,1,1,1), "mm"))
# Base map with legend
(base_legend <- base +
labs(fill = "")+
theme(legend.position = "bottom"))
llegend <- ggpubr::get_legend(base_legend)
# Base map with boxes
base_boxes <- base
for(i in 1:8){
base_boxes <- base_boxes +
addBoxLabel(i, color = "black", size = 0.2)
}
# Create list of insets
inset_list <- list()
for(i in 1:8){
inset_list[[i]] <- base +
xlim(lims$xmin[i], lims$xmax[i]) +
ylim(lims$ymin[i], lims$ymax[i]) +
labs(title = lims$inset_labs[i])+
theme(panel.border = element_rect(colour = "black", size=1, fill=NA),
plot.title = element_text(margin = margin(0,0,2,0),
size = 6),
plot.margin = unit(c(1,1,1,1), "mm"))
}
inset_list <- Filter(Negate(is.null), inset_list)
# create final list
lay <- rbind(c(9,1,1,1,1,2),
c(5,1,1,1,1,3),
c(6,1,1,1,1,8),
c(4,10,10,10,10,7))
full_inset_plt <- arrangeGrob(grobs = c(list(base_boxes), inset_list, list(llegend)),
layout_matrix  = lay)
# save object
jsave(filename = paste0("irsd_.png"),
base_folder = paste0(base_folder, "/maps"),
plot = full_inset_plt, square = F)
# cleanup
rm(base, base_boxes, llegend, base_legend, lay, full_inset_plt)
message("---- Finished irsd")
map_sa2 %>%
mutate(irsd_5c = irsd_5c) %>%
ggplot()+
theme_void()+
geom_sf(aes(fill = irsd_5c), col = NA)+
geom_sf(data = aus_border, aes(geometry = geometry),
colour = "black", fill = NA, size = 0.2)+
geom_sf(data = state_border, aes(geometry = geometry),
colour = "black", fill = NA, size = 0.1)+
theme(legend.position = "none",
text = element_text(size = 8),
plot.title = element_text(margin = margin(0,0,2,0)),
plot.margin = unit(c(1,1,1,1), "mm"))
map_sa2 %>%
mutate(irsd_5c = irsd_5c) %>%
ggplot()+
theme_void()+
geom_sf(aes(fill = irsd_5c), col = NA)+
geom_sf(data = aus_border, aes(geometry = geometry),
colour = "black", fill = NA, size = 0.2)+
geom_sf(data = state_border, aes(geometry = geometry),
colour = "black", fill = NA, size = 0.1)+
theme(text = element_text(size = 8),
plot.title = element_text(margin = margin(0,0,2,0)),
plot.margin = unit(c(1,1,1,1), "mm"))
modelled_est$summ$sa2_map %>%
mutate(irsd_5c = irsd_5c) %>%
ggplot()+
theme_void()+
geom_sf(aes(fill = ABS_irsd_decile_nation_complete), col = NA)+
geom_sf(data = aus_border, aes(geometry = geometry),
colour = "black", fill = NA, size = 0.2)+
geom_sf(data = state_border, aes(geometry = geometry),
colour = "black", fill = NA, size = 0.1)+
theme(text = element_text(size = 8),
plot.title = element_text(margin = margin(0,0,2,0)),
plot.margin = unit(c(1,1,1,1), "mm"))
modelled_est$summ$sa2 %>%
+     mutate(irsd_5c = irsd_5c)
modelled_est$summ$sa2 %>% mutate(irsd_5c = irsd_5c)
modelled_est$summ$sa2 %>% mutate(irsd_5c = irsd_5c) %>% group_by(ABS_irsd_decile_nation_complete, irsd_5c) %>% tally()
map_sa2
base <- map_sa2 %>%
arrange(ps_area) %>%
mutate(irsd_5c = irsd_5c) %>%
ggplot()+
theme_void()+
geom_sf(aes(fill = irsd_5c), col = NA)+
geom_sf(data = aus_border, aes(geometry = geometry),
colour = "black", fill = NA, size = 0.2)+
geom_sf(data = state_border, aes(geometry = geometry),
colour = "black", fill = NA, size = 0.1)+
theme(legend.position = "none",
text = element_text(size = 8),
plot.title = element_text(margin = margin(0,0,2,0)),
plot.margin = unit(c(1,1,1,1), "mm"))
# Base map with legend
(base_legend <- base +
labs(fill = "")+
theme(legend.position = "bottom"))
llegend <- ggpubr::get_legend(base_legend)
# Base map with boxes
base_boxes <- base
for(i in 1:8){
base_boxes <- base_boxes +
addBoxLabel(i, color = "black", size = 0.2)
}
# Create list of insets
inset_list <- list()
for(i in 1:8){
inset_list[[i]] <- base +
xlim(lims$xmin[i], lims$xmax[i]) +
ylim(lims$ymin[i], lims$ymax[i]) +
labs(title = lims$inset_labs[i])+
theme(panel.border = element_rect(colour = "black", size=1, fill=NA),
plot.title = element_text(margin = margin(0,0,2,0),
size = 6),
plot.margin = unit(c(1,1,1,1), "mm"))
}
inset_list <- Filter(Negate(is.null), inset_list)
# create final list
lay <- rbind(c(9,1,1,1,1,2),
c(5,1,1,1,1,3),
c(6,1,1,1,1,8),
c(4,10,10,10,10,7))
full_inset_plt <- arrangeGrob(grobs = c(list(base_boxes), inset_list, list(llegend)),
layout_matrix  = lay)
plot(full_inset_plt)
# save object
jsave(filename = paste0("irsd_.png"),
base_folder = paste0(base_folder, "/maps"),
plot = full_inset_plt, square = F)
# cleanup
rm(base, base_boxes, llegend, base_legend, lay, full_inset_plt)
message("---- Finished irsd")
# save object
jsave(filename = paste0("irsd.png"),
base_folder = paste0(base_folder, "/maps"),
plot = full_inset_plt, square = F)
# base map
base <- map_sa2 %>%
arrange(ps_area) %>%
mutate(irsd_5c = irsd_5c) %>%
ggplot()+
theme_void()+
geom_sf(aes(fill = irsd_5c), col = NA)+
geom_sf(data = aus_border, aes(geometry = geometry),
colour = "black", fill = NA, size = 0.2)+
geom_sf(data = state_border, aes(geometry = geometry),
colour = "black", fill = NA, size = 0.1)+
theme(legend.position = "none",
text = element_text(size = 8),
plot.title = element_text(margin = margin(0,0,2,0)),
plot.margin = unit(c(1,1,1,1), "mm"))
# Base map with legend
(base_legend <- base +
labs(fill = "")+
theme(legend.position = "bottom"))
llegend <- ggpubr::get_legend(base_legend)
# Base map with boxes
base_boxes <- base
for(i in 1:8){
base_boxes <- base_boxes +
addBoxLabel(i, color = "black", size = 0.2)
}
# Create list of insets
inset_list <- list()
for(i in 1:8){
inset_list[[i]] <- base +
xlim(lims$xmin[i], lims$xmax[i]) +
ylim(lims$ymin[i], lims$ymax[i]) +
labs(title = lims$inset_labs[i])+
theme(panel.border = element_rect(colour = "black", size=1, fill=NA),
plot.title = element_text(margin = margin(0,0,2,0),
size = 6),
plot.margin = unit(c(1,1,1,1), "mm"))
}
inset_list <- Filter(Negate(is.null), inset_list)
# create final list
lay <- rbind(c(9,1,1,1,1,2),
c(5,1,1,1,1,3),
c(6,1,1,1,1,8),
c(4,10,10,10,10,7))
full_inset_plt <- arrangeGrob(grobs = c(list(base_boxes), inset_list, list(llegend)),
layout_matrix  = lay)
# save object
jsave(filename = paste0("irsd.png"),
base_folder = paste0(base_folder, "/maps"),
plot = full_inset_plt, square = F)
# cleanup
rm(base, base_boxes, llegend, base_legend, lay, full_inset_plt)
message("---- Finished irsd")
