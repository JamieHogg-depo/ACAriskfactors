"Very Remote"))) %>%
ggplot(aes(x = mu_median,
y = ra_sa2))+
theme_bw()+
geom_boxplot()+
labs(y = "",
x = "Posterior medians")+
scale_y_discrete(limits=rev)
# Create layout
lay <- rbind(c(1),
c(2))
full_plt <- grid.arrange(grobs = list(seifa, ra),
layout_matrix  = lay)
# save object
jsave(filename = paste0("boxplot_avaseifaremoteness_", rf ,".png"),
base_folder = paste0(base_folder, "/figures"),
plot = full_plt,
square = F)
# cleanup
rm(seifa, ra)
## Caterpillar plots #### ------------------------------------------------------
modelled_est$summ$sa2 %>%
mutate(rank = rank(mu_median, ties.method = "first")) %>%
ggplot(aes(y = mu_median, ymin = mu_lower, ymax = mu_upper,
x = rank,
col = mu_median))+
theme_bw()+
geom_errorbar(col = "grey")+
geom_hline(yintercept = raw_est[[k]]$national[1])+
geom_point()+
scale_color_viridis_c(begin = 0.3, end = 1,
direction = 1,
option = "B")+
labs(y = "Modeled prevalence estimates",
x = "")+
theme(legend.position = "none")
# save object
jsave(filename = paste0("catterpillar_", rf ,".png"),
base_folder = paste0(base_folder, "/figures"),
square = F)
## Scatter - SA4 direct vs SA4 modelled #### -----------------------------------
# setup
temp <- left_join(modelled_est$summ$sa4, raw_est[[k]]$sa4, by = "ps_sa4")
for_range <- with(temp, c(lower, upper, HT - 1.96 * HT_SE, HT + 1.96 * HT_SE))
st_range <- range(for_range)
# plot
temp %>%
ggplot(aes(y = median, ymin = lower, ymax = upper,
x = HT,
xmin = HT - 1.96 * HT_SE,
xmax = HT + 1.96 * HT_SE,
col = log(HT_CV)))+
theme_bw()+
geom_errorbar(col = "grey")+
geom_errorbarh(col = "grey")+
geom_abline()+
geom_point()+
scale_color_viridis_c(begin = 0, end = 1,
direction = -1,
option = "A")+
labs(col = "Log\ndirect\nestimate\nCV",
y = "Modelled",
x = "Direct")+
ylim(st_range[1],st_range[2])+xlim(st_range[1],st_range[2])
# save object
jsave(filename = paste0("scatter_sa4directvsmodelled_", rf ,".png"),
base_folder = paste0(base_folder, "/figures"),
square = F)
# cleanup
rm(temp, for_range, st_range)
## Scatter - MSB direct vs modelled #### ---------------------------------------
# setup
temp <- left_join(modelled_est$summ$msb, raw_est[[k]]$msb, by = "ps_majorstatebench")
for_range <- with(temp, c(mu_lower, mu_upper, HT - 1.96 * HT_SE, HT + 1.96 * HT_SE))
st_range <- range(for_range)
# plot
temp %>%
ggplot(aes(y = mu_median, ymin = mu_lower, ymax = mu_upper,
x = HT,
xmin = HT - 1.96 * HT_SE,
xmax = HT + 1.96 * HT_SE,
col = log(HT_CV)))+
theme_bw()+
geom_errorbar(col = "grey")+
geom_errorbarh(col = "grey")+
geom_abline()+
geom_point()+
scale_color_viridis_c(begin = 0, end = 1,
direction = -1,
option = "A")+
labs(col = "Log\ndirect\nestimate\nCV",
y = "Modelled",
x = "Direct")+
ylim(st_range[1],st_range[2])+xlim(st_range[1],st_range[2])
# save object
jsave(filename = paste0("scatter_msbdirectvsmodelled_", rf ,".png"),
base_folder = paste0(base_folder, "/figures"),
square = F)
# cleanup
rm(temp, for_range, st_range)
## FINISH FOR LOOP #### --------------------------------------------------------
}
smoking <- readRDS("C:/r_proj/ACAriskfactors/data/summary_files/smoking_b1.rds")
alcohol <- readRDS("C:/r_proj/ACAriskfactors/data/summary_files/alcohol_b1.rds")
plot(smoking$summ$sa2$mu_median, alcohol$summ$sa2$mu_median)
obesity <- readRDS("C:/r_proj/ACAriskfactors/data/summary_files/obesity_b1.rds")
plot(smoking$summ$sa2$mu_median, obesity$summ$sa2$mu_median)
cor(smoking$summ$sa2$mu_median, obesity$summ$sa2$mu_median, alcohol$summ$sa2$mu_median)
cor(cbind(smoking$summ$sa2$mu_median, obesity$summ$sa2$mu_median, alcohol$summ$sa2$mu_median))
?cor
activityleis <- readRDS("C:/r_proj/ACAriskfactors/data/summary_files/activityleis_b1.rds")
cor(cbind(smoking$summ$sa2$mu_median, obesity$summ$sa2$mu_median, alcohol$summ$sa2$mu_median, activityleis$summ$sa2$mu_median))
diet <- readRDS("C:/r_proj/ACAriskfactors/data/summary_files/diet_b1.rds")
cor(cbind(smoking$summ$sa2$mu_median, obesity$summ$sa2$mu_median, alcohol$summ$sa2$mu_median, activityleis$summ$sa2$mu_median, diet$summ$sa2$mu_median))
pca(cbind(smoking$summ$sa2$mu_median, obesity$summ$sa2$mu_median, alcohol$summ$sa2$mu_median, activityleis$summ$sa2$mu_median, diet$summ$sa2$mu_median), scale = T)
?prcomp
pca <- prcomp(cbind(smoking$summ$sa2$mu_median, obesity$summ$sa2$mu_median, alcohol$summ$sa2$mu_median, activityleis$summ$sa2$mu_median, diet$summ$sa2$mu_median), scale. = T)
summary(pca)
dim(pca$x)
latent <- pca$x[,1]
plot(smoking$summ$sa2$mu_median, latent)
dim(pca$rotation)
pca$rotation
modelled_est <- readRDS("C:/r_proj/ACAriskfactors/data/summary_files/smoking_b1.rds")
library(tidyverse)
modelled_est$summ$sa2$LISA
modelled_est$summ$sa2$LISA %>%
group_by(ra_sa2, HH) %>%
tally()
modelled_est$summ$sa2 %>%
group_by(ra_sa2, HH) %>%
tally()
modelled_est$summ$sa2 %>%
group_by(ra_sa2, LISA) %>%
tally()
modelled_est$summ$sa2 %>%
group_by(ra_sa2, LISA) %>%
tally() %>% ungroup() %>%
filter(!is.na(LISA))
modelled_est$summ$sa2 %>%
group_by(ra_sa2, LISA) %>%
tally() %>% ungroup() %>%
filter(!is.na(LISA)) %>%
pivot_wider(names_from = ra_sa2, values_from = n)
modelled_est$summ$sa2 %>%
group_by(ra_sa2, LISA) %>%
tally() %>% ungroup() %>%
filter(!is.na(LISA)) %>%
filter(LISA %in% c("HH", "LL")) %>%
pivot_wider(names_from = ra_sa2, values_from = n)
modelled_est$summ$sa2 %>%
group_by(ra_sa2, LISA) %>%
tally() %>% ungroup() %>%
filter(!is.na(LISA)) %>%
filter(LISA %in% c("HH", "LL")) %>%
pivot_wider(names_from = ra_sa2, values_from = n) %>%
relocate(c(1,3,2,4,5,6))
## -----------------------------------------------------------------------------
## Setup ## --------------------------------------------------------------------
## -----------------------------------------------------------------------------
# Packages
library(tidyverse)
library(scales)
library(sf)
library(MASS)
library(patchwork)
library(readr)
library(readxl)
library(gridExtra)
rm(list = ls())
base_folder <- "C:/r_proj/ACAriskfactors/out"
export <- FALSE
## Functions ## ----------------------------------------------------------------
source('src/functions_ALL.R')
jsave <- function(filename, base_folder,
plot = last_plot(),
square = T, square_size = 5000,
ratio = c(6,9)){
if(square){
ggsave(filename = filename,
plot = plot,
path = base_folder,
dpi = 1000,
width = square_size,
height = square_size,
scale = 1,
units = "px")
}else{
total = square_size^2
a <- sqrt((total*ratio[1])/ratio[2])
b <- (ratio[2]*a)/ratio[1]
ggsave(filename = filename,
plot = plot,
path = base_folder,
dpi = 1000,
width = round(b),
height = round(a),
scale = 1,
units = "px")
}
}
make_numeric_decimal <- function(.data, digits = 2){
df <- .data
cols_to_format <- unlist(lapply(df, is.numeric))
df[,cols_to_format] <- bind_cols(lapply(df[,cols_to_format], sprintf, fmt = paste0('%#.', digits, 'f')))
return(df)
}
addBoxLabel <- function(i, color = "white", size = 0.5){
if(lims$position[i] == "r"){
list(
annotate("rect",
xmin = lims$xmin[i], xmax = lims$xmax[i],
ymin = lims$ymin[i], ymax = lims$ymax[i],
color = color, fill = NA, size = size),
annotate("text", y = mean(c(lims$ymin[i], lims$ymax[i])),
x = lims$xmax[i] + 1, label = lims$initials[i],
size = 3)
)
} else if(lims$position[i] == "b"){
list(
annotate("rect",
xmin = lims$xmin[i], xmax = lims$xmax[i],
ymin = lims$ymin[i], ymax = lims$ymax[i],
color = color, fill = NA, size = size),
annotate("text", x = mean(c(lims$xmin[i], lims$xmax[i])),
y = lims$ymin[i] - 1, label = lims$initials[i],
size = 3)
)
} else if(lims$position[i] == "l"){
list(
annotate("rect",
xmin = lims$xmin[i], xmax = lims$xmax[i],
ymin = lims$ymin[i], ymax = lims$ymax[i],
color = color, fill = NA, size = size),
annotate("text", y = mean(c(lims$ymin[i], lims$ymax[i])),
x = lims$xmin[i] - 1, label = lims$initials[i],
size = 3)
)
}else{
list(
annotate("rect",
xmin = lims$xmin[i], xmax = lims$xmax[i],
ymin = lims$ymin[i], ymax = lims$ymax[i],
color = color, fill = NA, size = size),
annotate("text", x = mean(c(lims$xmin[i], lims$xmax[i])),
y = lims$ymax[i] + 1, label = lims$initials[i],
size = 3)
)
}
}
# small function
apa <- function(.data, .m_n = FALSE, model_name = NULL){
if(.m_n){
temp <- .data %>%
mutate(ps_area = 1:nrow(.),
model = model_name)
}else{
temp <- .data %>%
mutate(ps_area = 1:nrow(.))
}
}
## Load Data ## ----------------------------------------------------------------
# state names
state_name_concor <- data.frame(ps_state = 1:8,
state_name_short = c("NSW", "VIC", "QLD",
"SA", "WA", "TAS",
"NT", "ACT"),
state_name = c("New South Wales",
"Victoria",
"Queensland",
"South Australia",
"Western Australia",
"Tasmania",
"Northern Territory",
"Australian Capital Territory"))
# Load global data
global_obj <- readRDS("data/DataLabExport/global_obj.rds")
# Load raw estimates
raw_est <- pbapply::pblapply(list.files("data/DataLabExport",
pattern = "raw_est_*", full.names = T), readRDS)
names(raw_est) <- str_remove(
str_remove(
list.files("data/DataLabExport", pattern = "raw_est_*"), "raw_est_"), ".rds")
# # Load modelled estimates - nonbenchmarked
# modelled_est_nb <- pbapply::pblapply(list.files("data/DataLabExport",
#                                              pattern = "modelled_est_nb_*", full.names = T), readRDS)
# names(modelled_est_nb) <- str_remove(
#   str_remove(
#     list.files("data/DataLabExport", pattern = "modelled_est_nb_"), "modelled_est_nb_"), ".rds")
#
# # Load modelled estimates
# modelled_est <- pbapply::pblapply(list.files("data/DataLabExport",
#                              pattern = "modelled_est_*", full.names = T), readRDS)
# names(modelled_est) <- str_remove(
#   str_remove(
#     list.files("data/DataLabExport", pattern = "modelled_est_*"), "modelled_est_"), ".rds")
# modelled_est <- modelled_est[!str_starts(names(modelled_est), "nb_")]
# Model building
model_building <- lapply(list.files("data/DataLabExport",
pattern = "model_building_*", full.names = T), readRDS)
names(model_building) <- str_remove(
str_remove(
list.files("data/DataLabExport", pattern = "model_building_*"), "model_building_"), ".rds")
# Load map
map_sa2_full <- st_read("C:/r_proj/ACAriskfactors/data/2016_SA2_Shape_min/2016_SA2_Shape_min.shp") %>%
mutate(SA2 = as.numeric(SA2_MAIN16)) %>%
filter(!str_detect(SA2_NAME, "Island")) %>%
filter(STATE_NAME != "Other Territories")
map_sa2 <- map_sa2_full %>%
right_join(.,global_obj$area_concor, by = "SA2")
# Australia outline
aus_border <- map_sa2 %>%
summarise(geometry = st_union(geometry)) %>%
st_as_sf() %>%
st_transform(4326)
# State outline
state_border <- map_sa2 %>%
mutate(state = str_sub(SA2, 1, 1)) %>%
group_by(state, STATE_NAME) %>%
summarise(geometry = st_union(geometry), .groups = "drop") %>%
filter(!st_is_empty(.)) %>%
#mutate(st_init = c("NSW", "VIC", "QLD", "SA", "WA", NA, "NT", NA)) %>%
st_as_sf() %>%
st_transform(4326)
## Other code ## --------------------------------------------------------------
# City Insets
lims <- data.frame(
xmin = c(152.6, 150.35, 144.5, 115.45, 138.1, 146.8, 148.6, 130.3),
xmax = c(153.6, 151.35, 145.5, 116.45, 139.1, 147.8, 149.6, 131.3),
ymin = -c(28, 34.4, 38.4, 32.5, 35.4, 43.4, 35.8, 13),
ymax = -c(27, 33.4, 37.4, 31.5, 34.4, 42.4, 34.8, 12),
city = c("Brisbane", "Sydney", "Melbourne", "Perth", "Adelaide", "Hobart", "Canberra", "Darwin"),
position = c("r", "r", "b", "l", "b", "b", "r", "l"),
inset_labs = c("B - Brisbane (Qld)", "S - Sydney (NSW)",
"M - Melbourne (Vic)", "P - Perth (WA)",
"A - Adelaide (SA)", "H - Hobart (Tas)",
"C - Canberra (ACT)", "D - Darwin (NT)")
) %>%
mutate(initials = str_sub(city, 1, 1))
## END SCRIPT ## --------------------------------------------------------------
# setup list
ll <- list()
k <- 8
rf <- names(raw_est)[k]
message("Started ", k, ": ", rf)
# load data
modelled_est <- readRDS(file = paste0("data/summary_files/", rf, "_b1.rds"))
ll[[k]] <- modelled_est$summ$sa2 %>%
group_by(ra_sa2, LISA) %>%
tally() %>% ungroup() %>%
filter(!is.na(LISA)) %>%
filter(LISA %in% c("HH", "LL")) %>%
pivot_wider(names_from = ra_sa2, values_from = n) %>%
relocate(c(1,3,2,4,5,6)) %>%
mutate(rf = rf) %>%
relocate(rf)
ll[[k]]
modelled_est$summ$sa2 %>%
group_by(ra_sa2, LISA) %>%
tally() %>% ungroup() %>%
filter(!is.na(LISA)) %>%
filter(LISA %in% c("HH", "LL"))
ll[[k]]
modelled_est$summ$sa2 %>%
group_by(ra_sa2, LISA) %>%
tally() %>% ungroup() %>%
filter(!is.na(LISA)) %>%
filter(LISA %in% c("HH", "LL"))
modelled_est$summ$sa2 %>%
group_by(ra_sa2, LISA) %>%
tally() %>% ungroup() %>%
filter(!is.na(LISA)) %>%
filter(LISA %in% c("HH", "LL")) %>% mutate(p = n/sum(n))
ll[[k]]
# setup list
ll <- list()
# for loop
for(k in 1:8){
rf <- names(raw_est)[k]
message("Started ", k, ": ", rf)
# load data
modelled_est <- readRDS(file = paste0("data/summary_files/", rf, "_b1.rds"))
ll[[k]] <- modelled_est$summ$sa2 %>%
group_by(ra_sa2, LISA) %>%
tally() %>% ungroup() %>%
filter(!is.na(LISA)) %>%
filter(LISA %in% c("HH", "LL")) %>%
pivot_wider(names_from = ra_sa2, values_from = n) %>%
relocate(c(1,3,2,4,5,6)) %>%
mutate(rf = rf) %>%
relocate(rf)
}
modelled_est$summ$sa2 %>%
group_by(ra_sa2, LISA) %>%
tally() %>% ungroup() %>%
filter(!is.na(LISA)) %>%
filter(LISA %in% c("HH", "LL"))
modelled_est$summ$sa2 %>%
group_by(ra_sa2, LISA) %>%
tally() %>% ungroup() %>%
filter(!is.na(LISA)) %>%
filter(LISA %in% c("HH", "LL")) %>%
pivot_wider(names_from = ra_sa2, values_from = n) %>%
relocate(c(1,3,2))
ll <- list()
# for loop
for(k in 1:8){
rf <- names(raw_est)[k]
message("Started ", k, ": ", rf)
# load data
modelled_est <- readRDS(file = paste0("data/summary_files/", rf, "_b1.rds"))
ll[[k]] <- modelled_est$summ$sa2 %>%
group_by(ra_sa2, LISA) %>%
tally() %>% ungroup() %>%
filter(!is.na(LISA)) %>%
filter(LISA %in% c("HH", "LL")) %>%
pivot_wider(names_from = ra_sa2, values_from = n) %>%
relocate(c(1,3,2)) %>%
mutate(rf = rf) %>%
relocate(rf)
}
# combine
bind_rows(ll)
modelled_est$summ$sa2 %>%
group_by(ra_sa2, LISA) %>%
tally() %>% ungroup() %>%
filter(!is.na(LISA)) %>%
filter(LISA %in% c("HH", "LL"))
modelled_est$summ$sa2 %>%
group_by(ra_sa2, LISA) %>%
tally() %>% ungroup() %>%
filter(!is.na(LISA)) %>%
filter(LISA %in% c("HH", "LL")) %>% group_by(LISA) %>% mutate(p = n/sum(n))
modelled_est$summ$sa2 %>%
group_by(ra_sa2, LISA) %>%
tally() %>% ungroup() %>%
filter(!is.na(LISA)) %>%
filter(LISA %in% c("HH", "LL")) %>%
group_by(LISA) %>% mutate(p = n/sum(n)) %>% ungroup() %>%
mutate(out = paste0(n, "(", round(p, 2), ")"))
modelled_est$summ$sa2 %>%
group_by(ra_sa2, LISA) %>%
tally() %>% ungroup() %>%
filter(!is.na(LISA)) %>%
filter(LISA %in% c("HH", "LL")) %>%
group_by(LISA) %>% mutate(p = n/sum(n)) %>% ungroup() %>%
mutate(out = paste0(n, "(", round(p, 2), ")")) %>%
dplyr::select(-c(n,p))
modelled_est$summ$sa2 %>%
group_by(ra_sa2, LISA) %>%
tally() %>% ungroup() %>%
filter(!is.na(LISA)) %>%
filter(LISA %in% c("HH", "LL")) %>%
group_by(LISA) %>% mutate(p = n/sum(n)) %>% ungroup() %>%
mutate(out = paste0(n, "(", round(p, 2), ")")) %>%
dplyr::select(-c(n,p)) %>%
pivot_wider(names_from = ra_sa2, values_from = out) %>%
relocate(c(1,3,2)) %>%
mutate(rf = rf) %>%
relocate(rf)
# setup list
ll <- list()
# for loop
for(k in 1:8){
rf <- names(raw_est)[k]
message("Started ", k, ": ", rf)
# load data
modelled_est <- readRDS(file = paste0("data/summary_files/", rf, "_b1.rds"))
ll[[k]] <- modelled_est$summ$sa2 %>%
group_by(ra_sa2, LISA) %>%
tally() %>% ungroup() %>%
filter(!is.na(LISA)) %>%
filter(LISA %in% c("HH", "LL")) %>%
group_by(LISA) %>% mutate(p = n/sum(n)) %>% ungroup() %>%
mutate(out = paste0(n, " (", round(p, 2), ")")) %>%
dplyr::select(-c(n,p)) %>%
pivot_wider(names_from = ra_sa2, values_from = out) %>%
relocate(c(1,3,2)) %>%
mutate(rf = rf) %>%
relocate(rf)
}
# combine
bind_rows(ll)
# combine
bind_rows(ll) %>%
write.csv("out/tables/LISA.csv")
ll <- list()
# for loop
for(k in 1:8){
rf <- names(raw_est)[k]
message("Started ", k, ": ", rf)
# load data
modelled_est <- readRDS(file = paste0("data/summary_files/", rf, "_b1.rds"))
ll[[k]] <- modelled_est$summ$sa2 %>%
group_by(ra_sa2, LISA) %>%
tally() %>% ungroup() %>%
filter(!is.na(LISA)) %>%
filter(LISA %in% c("HH", "LL")) %>%
group_by(ra_sa2) %>% mutate(p = n/sum(n)) %>% ungroup() %>%
mutate(out = paste0(n, " (", round(p, 2), ")")) %>%
dplyr::select(-c(n,p)) %>%
pivot_wider(names_from = ra_sa2, values_from = out) %>%
relocate(c(1,3,2)) %>%
mutate(rf = rf) %>%
relocate(rf)
}
# combine
bind_rows(ll)
bind_rows(ll) %>%
write.csv("out/tables/LISA.csv")
# cleanup
rm(ll, rf, modelled_est, k)
