corrplot(res, type = "upper",
tl.col = "black", tl.srt = 45)
# For major cities
cor_data <- summsa2all %>%
filter(ra_sa2_3c == "Outer regional to very remote") %>%
dplyr::select(ps_area, model, mu_median) %>%
pivot_wider(names_from = model, values_from = mu_median) %>%
dplyr::select(-c(ps_area, activityleis, waist_circum, obesity))
res <- cor(cor_data)
res
corrplot(res, type = "upper",
tl.col = "black", tl.srt = 45)
cor_data <- summsa2all %>%
dplyr::select(ps_area, model, mu_sd) %>%
pivot_wider(names_from = model, values_from = mu_sd) %>%
dplyr::select(-c(ps_area, activityleis, waist_circum, obesity))
res <- cor(cor_data)
library(corrplot)
corrplot(res, type = "upper", order = "hclust",
tl.col = "black", tl.srt = 45)
res
cor_data <- summsa2all %>%
dplyr::select(ps_area, model, mu_EP) %>%
pivot_wider(names_from = model, values_from = mu_EP) %>%
dplyr::select(-c(ps_area, activityleis, waist_circum, obesity))
res <- cor(cor_data)
library(corrplot)
corrplot(res, type = "upper", order = "hclust",
tl.col = "black", tl.srt = 45)
cor_data <- summsa2all %>%
dplyr::select(ps_area, model, mu_DP) %>%
pivot_wider(names_from = model, values_from = mu_DP) %>%
dplyr::select(-c(ps_area, activityleis, waist_circum, obesity))
cor_data <- summsa2all %>%
dplyr::select(ps_area, model, mu_DPP) %>%
pivot_wider(names_from = model, values_from = mu_DPP) %>%
dplyr::select(-c(ps_area, activityleis, waist_circum, obesity))
res <- cor(cor_data)
library(corrplot)
corrplot(res, type = "upper", order = "hclust",
tl.col = "black", tl.srt = 45)
res
temp <- summsa2all %>%
group_by(model) %>%
mutate(perc = cut_number(mu_median, 4, labels = FALSE) == 1) %>%
ungroup() %>%
dplyr::select(ps_area, ra_sa2, irsd_5c, model, perc) %>%
pivot_wider(names_from = model, values_from = perc)
to_add <- temp %>%
dplyr::select(activityleis, activityleiswkpl,
alcohol, diet, obesity,
waist_circum) %>%
rowwise %>%
mutate(match = n_distinct(unlist(cur_data())) == 1) %>%
ungroup() %>%
mutate(match = (match & activityleis))
temp <- temp %>%
cbind(., dplyr::select(to_add, match))
View(temp)
temp <- summsa2all %>%
group_by(model) %>%
mutate(perc = cut_number(musp01_median, 4, labels = FALSE) == 1) %>%
ungroup() %>%
dplyr::select(ps_area, ra_sa2, irsd_5c, model, perc) %>%
pivot_wider(names_from = model, values_from = perc)
summsa2all %>% dplyr::select(contains("musp01_"))
summsa2all %>% dplyr::select(contains("muspo1_"))
## Areas where all risk factors were lower
temp <- summsa2all %>%
group_by(model) %>%
mutate(perc = cut_number(muspo1_median, 4, labels = FALSE) == 1) %>%
ungroup() %>%
dplyr::select(ps_area, ra_sa2, irsd_5c, model, perc) %>%
pivot_wider(names_from = model, values_from = perc)
to_add <- temp %>%
dplyr::select(activityleis, activityleiswkpl,
alcohol, diet, obesity,
waist_circum) %>%
rowwise %>%
mutate(match = n_distinct(unlist(cur_data())) == 1) %>%
ungroup() %>%
mutate(match = (match & activityleis))
temp <- temp %>%
cbind(., dplyr::select(to_add, match))
summsa2all %>% ggplot(aes(mu_sd, log(N_persons)))
summsa2all %>% ggplot(aes(mu_sd, log(N_persons)))+geom_point()
summsa2all %>% ggplot(aes(mu_sd, x = log(N_persons)))+geom_point()
summsa2all %>% ggplot(aes(mu_sd, x = log(N_persons), col = model))+geom_point()
summsa2all %>% ggplot(aes(log(mu_sd), x = log(N_persons), col = model))+geom_point()
summsa2all %>% ggplot(aes(log(mu_sd), x = log(N_persons), col = model))+geom_point()+facet_grid(.~ra_sa2)
summsa2all %>% ggplot(aes(log(mu_sd), x = log(N_persons), col = model))+geom_point()+facet_grid(.~ra_sa2_3c)
summsa2all %>% ggplot(aes(log(mu_sd), x = log(N_persons), col = model))+geom_point()+facet_wrap(.~ra_sa2_3c)
summsa2all %>%
group_by(model) %>%
summarise(sd = sd(mu_cisize))
summsa2all %>%
group_by(model) %>%
summarise(sd = sd(mu_CV))
summsa2all %>%
ggplot(aes(x = mu_cv, y = model))+
geom_boxplot()
summsa2all %>%
ggplot(aes(x = mu_CV, y = model))+
geom_boxplot()
summsa2all %>% group_by(model) %>% summarise(mm = median(mu_CV))
summsa2all %>%
ggplot(aes(x = mu_CV, y = model, col = ra_sa2))+
geom_boxplot()
summsa2all %>%
group_by(model, ra_sa2) %>%
summarise(hj = median(mu_cisize))
summsa2all %>%
group_by(model, ra_sa2) %>%
summarise(hj = median(mu_cisize)) %>%
filter(ra_sa2 %in% c("Major Cities", "Very Remote"))
summsa2all %>%
group_by(model, ra_sa2) %>%
summarise(hj = median(mu_cisize)) %>%
filter(ra_sa2 %in% c("Major Cities", "Very Remote")) %>%
pivot_wider(names_from = ra_sa2, values_from = hj)
summsa2all %>%
group_by(model, ra_sa2) %>%
summarise(hj = median(mu_cisize)) %>%
filter(ra_sa2 %in% c("Major Cities", "Very Remote")) %>%
pivot_wider(names_from = ra_sa2, values_from = hj) %>%
mutate(rr = `Major Cities`/`Very Remote`)
summsa2all %>%
group_by(model, ra_sa2) %>%
summarise(hj = median(mu_cisize)) %>%
filter(ra_sa2 %in% c("Major Cities", "Very Remote")) %>%
pivot_wider(names_from = ra_sa2, values_from = hj) %>%
mutate(rr = `Very Remote`/`Major Cities`)
summsa2all %>%
group_by(model, ra_sa2_3c) %>%
summarise(hj = median(mu_cisize)) %>%
filter(ra_sa2_3c %in% c("Major Cities", "Outer regional to very remote")) %>%
pivot_wider(names_from = ra_sa2, values_from = hj) %>%
mutate(rr = `Very Remote`/`Major Cities`)
summsa2all %>%
group_by(model, ra_sa2_3c) %>%
summarise(hj = median(mu_cisize))
summsa2all %>%
group_by(model, ra_sa2_3c) %>%
summarise(hj = median(mu_cisize)) %>%
filter(ra_sa2_3c %in% c("Major Cities", "Outer regional to very remote")) %>%
pivot_wider(names_from = ra_sa2_3c, values_from = hj) %>%
mutate(rr = `Very Remote`/`Major Cities`)
summsa2all %>%
group_by(model, ra_sa2_3c) %>%
summarise(hj = median(mu_cisize)) %>%
filter(ra_sa2_3c %in% c("Major Cities", "Outer regional to very remote")) %>%
pivot_wider(names_from = ra_sa2_3c, values_from = hj) %>%
mutate(rr = `Outer regional to very remote`/`Major Cities`)
plot(dplyr::se)
cor_data <- summsa2all %>%
filter(ra_sa2_3c == "Major Cities") %>%
dplyr::select(ps_area, model, mu_cisize) %>%
pivot_wider(names_from = model, values_from = mu_cisize)
cor_data
cor_data <- summsa2all %>%
filter(ra_sa2_3c == "Major Cities") %>%
dplyr::select(ps_area, model, mu_cisize) %>%
pivot_wider(names_from = model, values_from = mu_cisize) %>%
dplyr::select(-c(ps_area))
cor_data
plot(cor_data)
cor_data <- summsa2all %>%
filter(ra_sa2_3c == "Major Cities") %>%
dplyr::select(ps_area, model, mu_CV) %>%
pivot_wider(names_from = model, values_from = mu_CV) %>%
dplyr::select(-c(ps_area))
cor(cor_data)
plot(cor_data)
cor_data <- summsa2all %>%
filter(ra_sa2_3c == "Major Cities") %>%
dplyr::select(ps_area, model, mu_CV) %>%
pivot_wider(names_from = model, values_from = mu_CV) %>%
dplyr::select(-c(ps_area, alcohol))
plot(cor_data)
cor(cor_data)
summsa2all %>%
group_by(model, ra_sa2_3c) %>%
summarise(hj = median(mu_CV)) %>%
filter(ra_sa2_3c %in% c("Major Cities", "Outer regional to very remote")) %>%
pivot_wider(names_from = ra_sa2_3c, values_from = hj) %>%
mutate(rr = `Outer regional to very remote`/`Major Cities`)
summsa2all %>%
group_by(model, ra_sa2) %>%
summarise(hj = median(mu_CV)) %>%
filter(ra_sa2 %in% c("Major Cities", "Very Remote")) %>%
pivot_wider(names_from = ra_sa2_3c, values_from = hj) %>%
mutate(rr = `Very Remote`/`Major Cities`)
summsa2all %>%
group_by(model, ra_sa2) %>%
summarise(hj = median(mu_CV)) %>%
filter(ra_sa2 %in% c("Major Cities", "Very Remote")) %>%
pivot_wider(names_from = ra_sa2, values_from = hj) %>%
mutate(rr = `Very Remote`/`Major Cities`)
source("src/ms.R")
## Wrangle ## ------------------------------------------------------------------
ec_df <- summsa2all %>%
mutate(ec = ifelse(or_EP > 0.9, "H",
ifelse(or_EP < 0.1, "L", NA)),
out = factor(ifelse(is.na(LISA) & !is.na(ec),
ec, as.character(LISA)),
levels = c("HH", "H", "L", "LL")),
model = getRFFullNames(model),
ra = factor(ifelse(ra_sa2_3c == "Outer regional to very remote", "Outer regional\nto very remote",
as.character(ra_sa2_3c)),
levels = c("Major Cities",
"Inner Regional",
"Outer regional\nto very remote")))
# IRSD
# weighted
ec1 <- ec_df %>%
mutate(ww =  2221*8 * N_persons/sum(N_persons)) %>%
group_by(model, irsd_5c) %>%
summarise(HH = sum(ww*(out == "HH"), na.rm= T),
H = sum(ww*(out == "H"), na.rm= T),
L = sum(ww*(out == "L"), na.rm= T),
LL = sum(ww*(out == "LL"), na.rm= T),
.groups = "drop") %>%
pivot_longer(-c(model, irsd_5c)) %>%
mutate(out = factor(name, levels = c("HH", "H", "L", "LL")))
# non-weighted
ec2 <- ec_df %>%
mutate(ww =  2221*8 * N_persons/sum(N_persons)) %>%
group_by(model, irsd_5c) %>%
summarise(HH = sum((out == "HH"), na.rm= T),
H = sum((out == "H"), na.rm= T),
L = sum((out == "L"), na.rm= T),
LL = sum((out == "LL"), na.rm= T),
.groups = "drop") %>%
pivot_longer(-c(model, irsd_5c)) %>%
mutate(out = factor(name, levels = c("HH", "H", "L", "LL")),
uw_value = value) %>%
dplyr::select(uw_value)
# join
ec_irsd <- cbind(ec1, ec2); rm(ec1,ec2)
# remoteness
# weighted
ec1 <- ec_df %>%
mutate(ww =  2221*8 * N_persons/sum(N_persons)) %>%
group_by(model, ra) %>%
summarise(HH = sum(ww*(out == "HH"), na.rm= T),
H = sum(ww*(out == "H"), na.rm= T),
L = sum(ww*(out == "L"), na.rm= T),
LL = sum(ww*(out == "LL"), na.rm= T),
.groups = "drop") %>%
pivot_longer(-c(model, ra)) %>%
mutate(out = factor(name, levels = c("HH", "H", "L", "LL")))
# non-weighted
ec2 <- ec_df %>%
mutate(ww =  2221*8 * N_persons/sum(N_persons)) %>%
group_by(model, ra) %>%
summarise(HH = sum((out == "HH"), na.rm= T),
H = sum((out == "H"), na.rm= T),
L = sum((out == "L"), na.rm= T),
LL = sum((out == "LL"), na.rm= T),
.groups = "drop") %>%
pivot_longer(-c(model, ra)) %>%
mutate(out = factor(name, levels = c("HH", "H", "L", "LL")),
uw_value = value) %>%
dplyr::select(uw_value)
# join
ec_ra <- cbind(ec1, ec2); rm(ec1,ec2)
View(ec_df)
glimpse(ec_df)
ec_df %>%
dplyr::select(ec, model) %>%
pivot_wider(names_from = model, values_from = ec)
ec_df %>%
dplyr::select(ps_area, ec, model) %>%
pivot_wider(names_from = model, values_from = ec)
ec_df$mu_DPPsig
ec_df %>%
dplyr::select(ps_area, ec, model) %>%
pivot_wider(names_from = model, values_from = ec)
ec_df %>%
dplyr::select(ps_area, ec, model) %>%
pivot_wider(names_from = model, values_from = ec) %>%
dplyr::select(-ps_area) %>%
rowwise %>%
mutate(match = n_distinct(unlist(cur_data())) == 1) %>%
ungroup()
ec_df %>%
dplyr::select(ps_area, ec, model) %>%
pivot_wider(names_from = model, values_from = ec) %>%
dplyr::select(-ps_area) %>%
rowwise %>%
mutate(match = n_distinct(unlist(cur_data())) == 1) %>%
ungroup() %>%
relocate(match)
ec_df %>%
dplyr::select(ps_area, ec, model) %>%
pivot_wider(names_from = model, values_from = ec) %>%
dplyr::select(-ps_area) %>%
rowwise %>%
mutate(match = n_distinct(unlist(cur_data())) == 1) %>%
ungroup() %>%
relocate(match) %>%
arrange(match)
ec_df %>%
dplyr::select(ps_area, ec, model) %>%
pivot_wider(names_from = model, values_from = ec) %>%
dplyr::select(-ps_area) %>%
rowwise %>%
mutate(match = n_distinct(unlist(cur_data())) == 1) %>%
ungroup() %>%
relocate(match) %>%
view()
ec_df %>%
dplyr::select(ps_area, ec, model) %>%
pivot_wider(names_from = model, values_from = ec) %>%
dplyr::select(-ps_area) %>%
rowwise %>%
mutate(match = n_distinct(unlist(cur_data())) == 1) %>%
ungroup() %>%
relocate(match) %>%
filter(match)
ec_df %>%
dplyr::select(ps_area, ec, model) %>%
pivot_wider(names_from = model, values_from = ec) %>%
dplyr::select(-ps_area) %>%
rowwise %>%
mutate(match = n_distinct(unlist(cur_data())) == 1) %>%
ungroup() %>%
relocate(match) %>%
filter(match & is.na(Overweight))
ec_df %>%
dplyr::select(ps_area, ec, model) %>%
pivot_wider(names_from = model, values_from = ec) %>%
dplyr::select(-ps_area) %>%
rowwise %>%
mutate(match = n_distinct(unlist(cur_data())) == 1) %>%
ungroup() %>%
relocate(match) %>%
filter(match & !is.na(Overweight))
temp %>%
dplyr::select(-ps_area) %>%
rowwise %>%
mutate(match = n_distinct(unlist(cur_data())) == 1) %>%
ungroup() %>%
dplyr::select(match)
temp <- ec_df %>%
dplyr::select(ps_area, ec, model) %>%
pivot_wider(names_from = model, values_from = ec)
temp %>%
dplyr::select(-ps_area) %>%
rowwise %>%
mutate(match = n_distinct(unlist(cur_data())) == 1) %>%
ungroup() %>%
dplyr::select(match)
out <- temp %>%
dplyr::select(-ps_area) %>%
rowwise %>%
mutate(match = n_distinct(unlist(cur_data())) == 1) %>%
ungroup() %>%
dplyr::select(match)
temp$match <- out$match
temp %>%
filter(match & !is.na(Overweight))
# Source master
source("src/ms.R")
# Load modelled estimates - nonbenchmarked
modelled_est_nb <- pbapply::pblapply(list.files("data/DataLabExport",
pattern = "modelled_est_nb_*", full.names = T), readRDS)
names(modelled_est_nb) <- str_remove(
str_remove(
list.files("data/DataLabExport", pattern = "modelled_est_nb_"), "modelled_est_nb_"), ".rds")
# Load modelled estimates
modelled_est <- pbapply::pblapply(list.files("data/DataLabExport",
pattern = "modelled_est_*", full.names = T), readRDS)
names(modelled_est) <- str_remove(
str_remove(
list.files("data/DataLabExport", pattern = "modelled_est_*"), "modelled_est_"), ".rds")
modelled_est <- modelled_est[!str_starts(names(modelled_est), "nb_")]
# sparse matrices for cluster analysis
W_sparse <- as(t(global_obj$W/rowSums(global_obj$W)), "sparseMatrix")
W_sq <- global_obj$W %*% global_obj$W
W_sparse_sq <- as(t(W_sq/rowSums(W_sq)), "sparseMatrix")
b <- 1
i <- 1
rf <- names(modelled_est)[i]
# create empty lists
sf_list <- list()
ll <- list()
## Posterior draws ## ----
if(b == 0){
sf_list$draws$mu <- modelled_est_nb[[i]]$mu
sf_list$draws$or <- modelled_est_nb[[i]]$or
sf_list$draws$rr <- modelled_est_nb[[i]]$mu/raw_est[[i]]$national[1]
sf_list$draws$count <- t(t(modelled_est_nb[[i]]$mu) * global_obj$census$N_persons)
sf_list$draws$mu_sa4 <- modelled_est_nb[[i]]$mu_sa4
sf_list$draws$mu_msb <- modelled_est_nb[[i]]$mu_msb
}else if(b == 1){
sf_list$draws$mu <- modelled_est[[i]]$mu
sf_list$draws$or <- modelled_est[[i]]$or
sf_list$draws$rr <- modelled_est[[i]]$mu/raw_est[[i]]$national[1]
sf_list$draws$count <- t(t(modelled_est[[i]]$mu) * global_obj$census$N_persons)
sf_list$draws$mu_sa4 <- modelled_est[[i]]$mu_sa4
sf_list$draws$mu_msb <- modelled_est[[i]]$mu_msb
}
# PHA level estimates
this <- aggregate(global_obj$census$N_persons, list(global_obj$census$pha), sum)
pha_unique <- this[,1]
this <- this[,2]
foo <- function(x){
aggregate(x*global_obj$census$N_persons, list(global_obj$census$pha), sum)[,2]/this
}
pha_draws_mat <- t(pbapply::pbapply(sf_list$draws$mu, 1, foo))
sf_list$summ$pha <- getMCMCsummary(pha_draws_mat) %>% mutate(pha =pha_unique) %>% relocate(pha)
rm(this, pha_unique, foo, pha_draws_mat)
# spatially lagged values
sf_list$draws$mu_spo1 <- (sf_list$draws$mu) %*% W_sparse
sf_list$draws$mu_spo2 <- (sf_list$draws$mu) %*% W_sparse_sq
# Cluster analysis
sf_list$draws$orc <- (sf_list$draws$or - 1)
sf_list$draws$orc_lag <- (sf_list$draws$or - 1) %*% t(global_obj$W/rowSums(global_obj$W))
sf_list$draws$rrc <- (sf_list$draws$rr - 1)
sf_list$draws$rrc_lag <- (sf_list$draws$rr - 1) %*% t(global_obj$W/rowSums(global_obj$W))
## Posterior summary ## ----
# prevalence
mu <- getMCMCsummary(sf_list$draws$mu, prefix = "mu_", model_name = rf) %>% apa()
muspo1 <- getMCMCsummary(sf_list$draws$mu_spo1, prefix = "muspo1_") %>% apa()
muspo2 <- getMCMCsummary(sf_list$draws$mu_spo2, prefix = "muspo2_") %>% apa()
# or
or <- getMCMCsummary(sf_list$draws$or, prefix = "or_") %>% apa()
logor <- getMCMCsummary(log(sf_list$draws$or), prefix = "logor_") %>% apa()
# rr
rr <- getMCMCsummary(sf_list$draws$rr, prefix = "rr_") %>% apa()
logrr <- getMCMCsummary(log(sf_list$draws$rr), prefix = "logrr_") %>% apa()
# count
count <- getMCMCsummary(sf_list$draws$count, prefix = "count_") %>% apa()
# sa4
sf_list$summ$sa4 <- getMCMCsummary(sf_list$draws$mu_sa4) %>% mutate(ps_sa4 = 1:nrow(.)) %>% relocate(ps_sa4)
sf_list$summ$msb <- getMCMCsummary(sf_list$draws$mu_msb, prefix = "mu_", model_name = rf) %>%
mutate(ps_majorstatebench = 1:nrow(.)) %>%
relocate(ps_majorstatebench)
## Difference in posterior probability ## ----
DPP_mu <- bind_cols(getDPP(sf_list$draws$mu, null_value = raw_est[[i]]$national[1])) %>%
setNames(paste0("mu_", names(.))) %>% apa()
DPP_or <- bind_cols(getDPP(sf_list$draws$or, null_value = 1)) %>%
setNames(paste0("or_", names(.))) %>% apa()
DPP_rr <- bind_cols(getDPP(sf_list$draws$rr, null_value = 1)) %>%
setNames(paste0("rr_", names(.))) %>% apa()
## Summarize for all ## ----
sf_list$summ$sa2 <- list(mu, muspo1, muspo2, DPP_mu, or, logor, DPP_or, rr, logrr, DPP_rr, count) %>%
reduce(inner_join, by = "ps_area") %>%
mutate(LISA = as.factor(getLISA(sf_list$draws$orc, sf_list$draws$orc_lag)),
LISA_rr = as.factor(getLISA(sf_list$draws$rrc, sf_list$draws$rrc_lag))) %>%
left_join(.,global_obj$census, by = "ps_area")
# keep empty geometries
sf_list$summ$sa2_map <- sf_list$summ$sa2 %>%
right_join(.,map_sa2, by = c("ps_area", "SA2")) %>% sf::st_as_sf()
sf_list$summ$sa2 %>% glimpse()
table(sf_list$summ$sa2$LISA)
table(sf_list$summ$sa2$LISA_cc)
table(sf_list$summ$sa2$LISA_rr)
table(sf_list$summ$sa2$LISA_rr, sf_list$summ$sa2$LISA)
?table(sf_list$summ$sa2$LISA_rr, sf_list$summ$sa2$LISA)
?table(sf_list$summ$sa2$LISA_rr, sf_list$summ$sa2$LISA, useNA = "always")
table(sf_list$summ$sa2$LISA_rr, sf_list$summ$sa2$LISA, useNA = "always")
# add census
census <- inner_join(global_obj$census, global_obj$area_concor, "ps_area")
# add census
census <- inner_join(global_obj$census, global_obj$area_concor, c("ps_area", "SA2"))
this <- aggregate(census$N_persons, list(census$ps_sa3), sum)
sa3_unique <- this[,1]
this <- this[,2]
foo <- function(x){
aggregate(x*census$N_persons, list(census$ps_sa3), sum)[,2]/this
}
sa3_draws_mat <- t(pbapply::pbapply(sf_list$draws$mu, 1, foo))
sf_list$summ$sa3 <- getMCMCsummary(pha_draws_mat) %>% mutate(ps_sa3 = sa3_unique) %>% relocate(sa3)
rm(this, sa3_unique, foo, sa3_draws_mat)
sf_list$summ$sa3 <- getMCMCsummary(sa3_draws_mat) %>% mutate(ps_sa3 = sa3_unique) %>% relocate(ps_sa3)
rm(this, sa3_unique, foo, sa3_draws_mat)
this <- aggregate(census$N_persons, list(census$ps_sa3), sum)
sa3_unique <- this[,1]
this <- this[,2]
foo <- function(x){
aggregate(x*census$N_persons, list(census$ps_sa3), sum)[,2]/this
}
sa3_draws_mat <- t(pbapply::pbapply(sf_list$draws$mu, 1, foo))
sf_list$summ$sa3 <- getMCMCsummary(sa3_draws_mat) %>% mutate(ps_sa3 = sa3_unique) %>% relocate(ps_sa3)
rm(this, sa3_unique, foo, sa3_draws_mat)
sf_list$summ$sa3
global_obj$area_concor
global_obj$area_concor %>% group_by(SA3, ps_sa3)
global_obj$area_concor %>% group_by(SA3, ps_sa3) %>% tally()
global_obj$area_concor %>% group_by(SA3, ps_sa3) %>% tally() %>% ungroup() %>% dplyr::select(-n)
sa3_concor <- global_obj$area_concor %>%
group_by(SA3, ps_sa3) %>% tally() %>%
ungroup() %>% dplyr::select(-n)
dim(sf_list$summ$sa3)
getMCMCsummary(sa3_draws_mat) %>%
mutate(ps_sa3 = sa3_unique) %>%
left_join(.,sa3_concor, by = "ps_sa3") %>%
relocate(ps_sa3, SA3)
this <- aggregate(census$N_persons, list(census$ps_sa3), sum)
sa3_unique <- this[,1]
this <- this[,2]
foo <- function(x){
aggregate(x*census$N_persons, list(census$ps_sa3), sum)[,2]/this
}
sa3_draws_mat <- t(pbapply::pbapply(sf_list$draws$mu, 1, foo))
sf_list$summ$sa3 <- getMCMCsummary(sa3_draws_mat) %>%
mutate(ps_sa3 = sa3_unique) %>%
left_join(.,sa3_concor, by = "ps_sa3") %>%
relocate(ps_sa3, SA3)
sf_list$summ$sa3
