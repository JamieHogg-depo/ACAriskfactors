dplyr::select(rf, MARD, out) %>%
setNames(c("", "MARD", "Median (IQR) of relative reduction in width of HDIs")) %>%
write.csv("out/tables/benchmark_comp.csv")
bind_rows(ll) %>%
mutate(MARD = 10*MARD) %>%
make_numeric_decimal(digits = 2) %>%
mutate(out = paste0(m, " (", p25, ", ", p75, ")"),
rf = getRFFullNames(rf)) %>%
dplyr::select(rf, MARD, out) %>%
setNames(c("", "MARD", "Median (IQR) of relative reduction in width of HDIs"))
bind_rows(ll) %>%
mutate(MARD = 10*MARD) %>%
make_numeric_decimal(digits = 2) %>%
mutate(out = paste0(m, " (", p25, ", ", p75, ")"),
rf = getRFFullNames(rf)) %>%
dplyr::select(rf, MARD, out) %>%
setNames(c("", "MARD", "Median (IQR) of relative reduction in width of HDIs")) %>%
write.csv("out/tables/benchmark_comp.csv")
cisize
data.frame(nb = modelled_est_nb$summ$sa2$mu_cisize,
b = modelled_est$summ$sa2$mu_cisize) %>%
bind_cols(.,modelled_est$summ$sa2) %>%
filter(ra_sa2 != "Very Remote",
ps_state != 7) %>%
mutate(r = nb/b) %>% # over 1 means nb is less certain
dplyr::select(b, nb, r)
data.frame(nb = modelled_est_nb$summ$sa2$mu_cisize,
b = modelled_est$summ$sa2$mu_cisize) %>%
bind_cols(.,modelled_est$summ$sa2) %>%
filter(ra_sa2 != "Very Remote",
ps_state != 7) %>%
mutate(r = nb/b) %>% # over 1 means nb is less certain
dplyr::select(b, nb, r, N_persons) %>% ggplot(aes(r, N_persons))+geom_point()
data.frame(nb = modelled_est_nb$summ$sa2$mu_cisize,
b = modelled_est$summ$sa2$mu_cisize) %>%
bind_cols(.,modelled_est$summ$sa2) %>%
filter(ra_sa2 != "Very Remote",
ps_state != 7) %>%
mutate(r = nb/b) %>% # over 1 means nb is less certain
dplyr::select(b, nb, r, N_persons) %>% ggplot(aes(y = r, N_persons))+geom_point()
data.frame(nb = modelled_est_nb$summ$sa2$mu_cisize,
b = modelled_est$summ$sa2$mu_cisize) %>%
bind_cols(.,modelled_est$summ$sa2) %>%
filter(ra_sa2 != "Very Remote",
ps_state != 7) %>%
mutate(r = nb/b) %>% # over 1 means nb is less certain
dplyr::select(b, nb, r, N_persons) %>% ggplot(aes(y = log(r), log(N_persons)))+geom_point()
data.frame(nb = modelled_est_nb$summ$sa2$mu_cisize,
b = modelled_est$summ$sa2$mu_cisize) %>%
bind_cols(.,modelled_est$summ$sa2) %>%
filter(ra_sa2 != "Very Remote",
ps_state != 7) %>%
mutate(r = nb/b) %>% # over 1 means nb is less certain
dplyr::select(b, nb, r, N_persons) %>% ggplot(aes(y = log(r), N_persons))+geom_point()
names(raw_est)
k <- 2
rf <- names(raw_est)[k]
message("Started ", k, ": ", rf)
# load data
modelled_est <- readRDS(file = paste0("data/summary_files/", rf, "_b1.rds"))
modelled_est_nb <- readRDS(file = paste0("data/summary_files/", rf, "_b0.rds"))
# mu
mu <- data.frame(nb = modelled_est_nb$summ$sa2$mu_median,
b = modelled_est$summ$sa2$mu_median) %>%
bind_cols(.,modelled_est$summ$sa2) %>%
filter(ra_sa2 != "Very Remote",
ps_state != 7)
# cisize
cisize <- data.frame(nb = modelled_est_nb$summ$sa2$mu_cisize,
b = modelled_est$summ$sa2$mu_cisize) %>%
bind_cols(.,modelled_est$summ$sa2) %>%
filter(ra_sa2 != "Very Remote",
ps_state != 7) %>%
mutate(r = nb/b) %>% # over 1 means nb is less certain
dplyr::select(b, nb, r)
ll[[k]] <- data.frame(rf = rf,
MARD = with(mu, mean(abs(nb - b)/b)),
m = median(cisize$r),
p25 = unname(quantile(cisize$r, probs = 0.25)),
p75 = unname(quantile(cisize$r, probs = 0.75)))
data.frame(nb = modelled_est_nb$summ$sa2$mu_cisize,
b = modelled_est$summ$sa2$mu_cisize) %>%
bind_cols(.,modelled_est$summ$sa2) %>%
filter(ra_sa2 != "Very Remote",
ps_state != 7) %>%
mutate(r = nb/b) %>% # over 1 means nb is less certain
dplyr::select(b, nb, r, N_persons) %>% ggplot(aes(y = log(r), N_persons))+geom_point()
data.frame(nb = modelled_est_nb$summ$sa2$mu_cisize,
+                        b = modelled_est$summ$sa2$mu_cisize) %>%
bind_cols(.,modelled_est$summ$sa2) %>%
filter(ra_sa2 != "Very Remote",
ps_state != 7) %>%
mutate(r = abs(nb-b)) %>% # over 1 means nb is less certain
dplyr::select(b, nb, r, N_persons) %>%
ggplot(aes(y = log(r), N_persons))+
geom_point()
data.frame(nb = modelled_est_nb$summ$sa2$mu_cisize,
+                        b = modelled_est$summ$sa2$mu_cisize) %>%
bind_cols(.,modelled_est$summ$sa2) %>%
filter(ra_sa2 != "Very Remote",
ps_state != 7) %>%
mutate(r = abs(nb-b)) %>% # over 1 means nb is less certain
dplyr::select(b, nb, r, N_persons) %>%
ggplot(aes(y = log(r), N_persons))+
geom_point()
data.frame(nb = modelled_est_nb$summ$sa2$mu_cisize,
b = modelled_est$summ$sa2$mu_cisize) %>%
bind_cols(.,modelled_est$summ$sa2) %>%
filter(ra_sa2 != "Very Remote",
ps_state != 7) %>%
mutate(r = abs(nb-b)) %>% # over 1 means nb is less certain
dplyr::select(b, nb, r, N_persons) %>%
ggplot(aes(y = log(r), N_persons))+
geom_point()
data.frame(nb = modelled_est_nb$summ$sa2$mu_cisize,
b = modelled_est$summ$sa2$mu_cisize) %>%
bind_cols(.,modelled_est$summ$sa2) %>%
filter(ra_sa2 != "Very Remote",
ps_state != 7) %>%
mutate(r = abs(nb-b)) %>% # over 1 means nb is less certain
dplyr::select(b, nb, r, N_persons)
data.frame(nb = modelled_est_nb$summ$sa2$mu_cisize,
b = modelled_est$summ$sa2$mu_cisize) %>%
bind_cols(.,modelled_est$summ$sa2) %>%
filter(ra_sa2 != "Very Remote",
ps_state != 7) %>%
mutate(r = cut_number(abs(nb-b))) %>% # over 1 means nb is less certain
dplyr::select(b, nb, r, N_persons) %>%
ggplot(aes(y = log(r), N_persons))+
geom_point()
data.frame(nb = modelled_est_nb$summ$sa2$mu_cisize,
b = modelled_est$summ$sa2$mu_cisize) %>%
bind_cols(.,modelled_est$summ$sa2) %>%
filter(ra_sa2 != "Very Remote",
ps_state != 7) %>%
mutate(r = cut_number(abs(nb-b)))
data.frame(nb = modelled_est_nb$summ$sa2$mu_cisize,
b = modelled_est$summ$sa2$mu_cisize) %>%
bind_cols(.,modelled_est$summ$sa2) %>%
filter(ra_sa2 != "Very Remote",
ps_state != 7) %>%
mutate(r = cut_number(abs(nb-b), 10))
data.frame(nb = modelled_est_nb$summ$sa2$mu_cisize,
b = modelled_est$summ$sa2$mu_cisize) %>%
bind_cols(.,modelled_est$summ$sa2) %>%
filter(ra_sa2 != "Very Remote",
ps_state != 7) %>%
mutate(r = cut_number(abs(nb-b), 10, labels = FALSE)) %>% # over 1 means nb is less certain
dplyr::select(b, nb, r, N_persons) %>%
ggplot(aes(y = log(r), N_persons))+
geom_point()
data.frame(nb = modelled_est_nb$summ$sa2$mu_cisize,
b = modelled_est$summ$sa2$mu_cisize) %>%
bind_cols(.,modelled_est$summ$sa2) %>%
filter(ra_sa2 != "Very Remote",
ps_state != 7) %>%
mutate(r = cut_number(abs(nb-b), 10, labels = FALSE)) %>% # over 1 means nb is less certain
filter(r == 10)
data.frame(nb = modelled_est_nb$summ$sa2$mu_cisize,
b = modelled_est$summ$sa2$mu_cisize) %>%
bind_cols(.,modelled_est$summ$sa2) %>%
filter(ra_sa2 != "Very Remote",
ps_state != 7) %>%
mutate(r = cut_number(abs(nb-b), 10, labels = FALSE)) %>% # over 1 means nb is less certain
filter(r == 10) %>%
dplyr::select(b, nb, r, N_persons) %>%
summary(.)
data.frame(nb = modelled_est_nb$summ$sa2$mu_cisize,
b = modelled_est$summ$sa2$mu_cisize) %>%
bind_cols(.,modelled_est$summ$sa2) %>%
filter(ra_sa2 != "Very Remote",
ps_state != 7) %>%
mutate(r = abs(nb-b),
r_c = cut_number(r, 10, labels = FALSE)) %>% # over 1 means nb is less certain
filter(r_c == 10) %>%
dplyr::select(b, nb, r, N_persons, r_c) %>%
summary(.)
data.frame(nb = modelled_est_nb$summ$sa2$mu_cisize,
b = modelled_est$summ$sa2$mu_cisize) %>%
bind_cols(.,modelled_est$summ$sa2) %>%
filter(ra_sa2 != "Very Remote",
ps_state != 7) %>%
mutate(r = nb/b,
r_c = cut_number(r, 10, labels = FALSE)) %>% # over 1 means nb is less certain
filter(r_c == 10) %>%
dplyr::select(b, nb, r, N_persons, r_c) %>%
summary(.)
data.frame(nb = modelled_est_nb$summ$sa2$mu_cisize,
b = modelled_est$summ$sa2$mu_cisize) %>%
bind_cols(.,modelled_est$summ$sa2) %>%
filter(ra_sa2 != "Very Remote",
ps_state != 7) %>%
mutate(r = b/nb,
r_c = cut_number(r, 10, labels = FALSE)) %>% # over 1 means nb is less certain
filter(r_c == 10) %>%
dplyr::select(b, nb, r, N_persons, r_c) %>%
summary(.)
this <- data.frame(nb = modelled_est_nb$summ$sa2$mu_cisize,
b = modelled_est$summ$sa2$mu_cisize) %>%
bind_cols(.,modelled_est$summ$sa2) %>%
filter(ra_sa2 != "Very Remote",
ps_state != 7) %>%
mutate(r = b/nb,
r_c = cut_number(r, 10, labels = FALSE)) %>% # over 1 means nb is less certain
filter(r_c == 10) %>%
dplyr::select(b, nb, r, N_persons, r_c)
message("Top 10%: N_persons ", round(median(this$N_persons),2))
message("Top 10%: N_persons ", round(median(this$N_persons),2), "(",
round(quantile(this$N_persons, probs = 0.25),2), ", ",
round(quantile(this$N_persons, probs = 0.75),2), ")")
this <- data.frame(nb = modelled_est_nb$summ$sa2$mu_cisize,
b = modelled_est$summ$sa2$mu_cisize) %>%
bind_cols(.,modelled_est$summ$sa2) %>%
filter(ra_sa2 != "Very Remote",
ps_state != 7) %>%
mutate(r = b/nb,
r_c = cut_number(r, 20, labels = FALSE)) %>% # over 1 means nb is less certain
filter(r_c == 10) %>%
dplyr::select(b, nb, r, N_persons, r_c)
message("Top 10%: N_persons ", round(median(this$N_persons),2), "(",
round(quantile(this$N_persons, probs = 0.25),2), ", ",
round(quantile(this$N_persons, probs = 0.75),2), ")")
this <- data.frame(nb = modelled_est_nb$summ$sa2$mu_cisize,
b = modelled_est$summ$sa2$mu_cisize) %>%
bind_cols(.,modelled_est$summ$sa2) %>%
filter(ra_sa2 != "Very Remote",
ps_state != 7) %>%
mutate(r = b/nb,
r_c = cut_number(r, 20, labels = FALSE)) %>% # over 1 means nb is less certain
filter(r_c == 20) %>%
dplyr::select(b, nb, r, N_persons, r_c)
message("Top 10%: N_persons ", round(median(this$N_persons),2), "(",
round(quantile(this$N_persons, probs = 0.25),2), ", ",
round(quantile(this$N_persons, probs = 0.75),2), ")")
# setup list
ll <- list()
# for loop
for(k in 1:8){
rf <- names(raw_est)[k]
message("Started ", k, ": ", rf)
# load data
modelled_est <- readRDS(file = paste0("data/summary_files/", rf, "_b1.rds"))
modelled_est_nb <- readRDS(file = paste0("data/summary_files/", rf, "_b0.rds"))
# mu
mu <- data.frame(nb = modelled_est_nb$summ$sa2$mu_median,
b = modelled_est$summ$sa2$mu_median) %>%
bind_cols(.,modelled_est$summ$sa2) %>%
filter(ra_sa2 != "Very Remote",
ps_state != 7)
# cisize
cisize <- data.frame(nb = modelled_est_nb$summ$sa2$mu_cisize,
b = modelled_est$summ$sa2$mu_cisize) %>%
bind_cols(.,modelled_est$summ$sa2) %>%
filter(ra_sa2 != "Very Remote",
ps_state != 7) %>%
mutate(r = nb/b) %>% # over 1 means nb is less certain
dplyr::select(b, nb, r)
ll[[k]] <- data.frame(rf = rf,
MARD = with(mu, mean(abs(nb - b)/b)),
m = median(cisize$r),
p25 = unname(quantile(cisize$r, probs = 0.25)),
p75 = unname(quantile(cisize$r, probs = 0.75)))
this <- data.frame(nb = modelled_est_nb$summ$sa2$mu_cisize,
b = modelled_est$summ$sa2$mu_cisize) %>%
bind_cols(.,modelled_est$summ$sa2) %>%
filter(ra_sa2 != "Very Remote",
ps_state != 7) %>%
mutate(r = b/nb,
r_c = cut_number(r, 20, labels = FALSE)) %>% # over 1 means nb is less certain
filter(r_c == 20) %>%
dplyr::select(b, nb, r, N_persons, r_c)
message("Top 5%: N_persons ", round(median(this$N_persons),2), "(",
round(quantile(this$N_persons, probs = 0.25),2), ", ",
round(quantile(this$N_persons, probs = 0.75),2), ")")
}
summsa2all %>%
filter(model == "alcohol")
summsa2all %>%
filter(model == "alcohol") %>%
mutate(new = paste0(irsd_5c, " - ", ra_sa2))
summsa2all %>%
filter(model == "alcohol") %>%
mutate(new = paste0(irsd_5c, " - ", ra_sa2)) %>%
ggplot(aes(y = mu_median, x = new)) +
geom_boxplot()
summsa2all %>%
filter(model == "alcohol") %>%
mutate(new = paste0(irsd_5c, " - ", ra_sa2)) %>%
ggplot(aes(x = mu_median, y = new)) +
geom_boxplot()
summsa2all %>%
filter(model == "alcohol") %>%
mutate(new = paste0(irsd_5c, " - ", ra_sa2)) %>%
group_by(new) %>% tally()
summsa2all %>%
filter(model == "alcohol") %>%
mutate(new = paste0(irsd_5c, " - ", ra_sa2)) %>%
group_by(new) %>% tally() %>% view()
summsa2all %>%
filter(model == "alcohol") %>%
mutate(new = paste0(irsd_5c, " - ", ra_sa2)) %>%
ggplot(aes(x = mu_cisize, y = new)) +
geom_boxplot()
summsa2all %>%
filter(model == "alcohol") %>%
mutate(new = paste0(irsd_5c, " - ", ra_sa2)) %>%
ggplot(aes(x = or_median, y = new)) +
geom_boxplot()
summsa2all %>%
filter(model == "alcohol") %>%
mutate(new = paste0(irsd_5c, " - ", ra_sa2)) %>%
ggplot(aes(x = log(or_median), y = new)) +
geom_boxplot()
CoordObsPred <-
ggplot2::ggproto(
"CoordObsPred",
ggplot2::CoordFixed,
setup_panel_params = function(self, scale_x, scale_y, params = list()) {
# coord limits take precedence over scale limits
rngs <- range(
self$limits$x %||% scale_x$get_limits(),
self$limits$y %||% scale_y$get_limits(),
na.rm = TRUE
)
self$limits$y <- rngs
self$limits$x <- rngs
ggplot2::ggproto_parent(ggplot2::CoordFixed, self)$setup_panel_params(scale_x, scale_y, params)
},
aspect = function(self, ranges) {
1 / self$ratio
}
)
#' Use same scale for plots of observed vs predicted values
#'
#' For regression models, `coord_obs_pred()` can be used in a ggplot to make the
#' x- and y-axes have the same exact scale along with an aspect ratio of one.
#' @param ratio	Aspect ratio, expressed as `y / x`. Defaults to 1.0.
#' @param xlim,ylim Limits for the x and y axes.
#' @param expand Not currently used.
#' @param clip Should drawing be clipped to the extent of the plot panel? A setting
#' of "on" (the default) means yes, and a setting of "off" means no. In most
#' cases, the default of "on" should not be changed, as setting `clip = "off"`
#' can cause unexpected results. It allows drawing of data points anywhere on
#' the plot, including in the plot margins. If limits are set via `xlim` and
#' `ylim` and some data points fall outside those limits, then those data points
#' may show up in places such as the axes, the legend, the plot title, or the
#' plot margins.
#' @return A `ggproto` object.
#' @examples
#' data(solubility_test, package = "modeldata")
#'
#' library(ggplot2)
#' p <- ggplot(solubility_test, aes(x = solubility, y = prediction)) +
#'   geom_abline(lty = 2) +
#'   geom_point(alpha = 0.5)
#'
#' p
#'
#' p + coord_fixed()
#'
#' p + coord_obs_pred()
#' @export
coord_obs_pred <-
function(ratio = 1,
xlim = NULL,
ylim = NULL,
expand = TRUE,
clip = "on") {
ggplot2::ggproto(
NULL,
CoordObsPred,
limits = list(x = xlim, y = ylim),
ratio = ratio,
expand = expand,
clip = clip
)
}
source("src/ms.R")
lookup <- data.frame(rf = names(raw_est),
sha = c("exercise", "exercise", "alcohol",
"fruit", "obese", "overweight",
"smoking", "overweight"),
rf_full = c("Leisure physical activity",
"All physical activity",
"Alcohol",
"Diet",
"Obesity",
"Overweight",
"Current smoking",
"Risky waist circumference"))
CoordObsPred <-
ggplot2::ggproto(
"CoordObsPred",
ggplot2::CoordFixed,
setup_panel_params = function(self, scale_x, scale_y, params = list()) {
# coord limits take precedence over scale limits
rngs <- range(
self$limits$x %||% scale_x$get_limits(),
self$limits$y %||% scale_y$get_limits(),
na.rm = TRUE
)
self$limits$y <- rngs
self$limits$x <- rngs
ggplot2::ggproto_parent(ggplot2::CoordFixed, self)$setup_panel_params(scale_x, scale_y, params)
},
aspect = function(self, ranges) {
1 / self$ratio
}
)
#' Use same scale for plots of observed vs predicted values
#'
#' For regression models, `coord_obs_pred()` can be used in a ggplot to make the
#' x- and y-axes have the same exact scale along with an aspect ratio of one.
#' @param ratio	Aspect ratio, expressed as `y / x`. Defaults to 1.0.
#' @param xlim,ylim Limits for the x and y axes.
#' @param expand Not currently used.
#' @param clip Should drawing be clipped to the extent of the plot panel? A setting
#' of "on" (the default) means yes, and a setting of "off" means no. In most
#' cases, the default of "on" should not be changed, as setting `clip = "off"`
#' can cause unexpected results. It allows drawing of data points anywhere on
#' the plot, including in the plot margins. If limits are set via `xlim` and
#' `ylim` and some data points fall outside those limits, then those data points
#' may show up in places such as the axes, the legend, the plot title, or the
#' plot margins.
#' @return A `ggproto` object.
#' @examples
#' data(solubility_test, package = "modeldata")
#'
#' library(ggplot2)
#' p <- ggplot(solubility_test, aes(x = solubility, y = prediction)) +
#'   geom_abline(lty = 2) +
#'   geom_point(alpha = 0.5)
#'
#' p
#'
#' p + coord_fixed()
#'
#' p + coord_obs_pred()
#' @export
coord_obs_pred <-
function(ratio = 1,
xlim = NULL,
ylim = NULL,
expand = TRUE,
clip = "on") {
ggplot2::ggproto(
NULL,
CoordObsPred,
limits = list(x = xlim, y = ylim),
ratio = ratio,
expand = expand,
clip = clip
)
}
k <- 1
rf <- names(raw_est)[k]
rf_full <- lookup[k,]$rf_full
sha_vars = paste0("shaout_", lookup[lookup$rf == rf,]$sha, "_", c("estimate", "lower", "upper"))
message("Started ", k, ": ", rf)
# load data
modelled_est <- readRDS(file = paste0("data/summary_files/", rf, "_b1.rds"))
modelled_est_nb <- readRDS(file = paste0("data/summary_files/", rf, "_b0.rds"))
# pha level
modelled_est$summ$pha %>%
left_join(.,SHA_pha, by = "pha") %>%
ggplot(aes(x = median, xmin = lower, xmax = upper,
y = .data[[sha_vars[1]]],
ymin = .data[[sha_vars[2]]],
ymax = .data[[sha_vars[3]]]))+
theme_bw()+
geom_errorbar(col = "grey")+
geom_errorbarh(col = "grey")+
geom_abline()+
geom_point()+
labs(y = "Social Health Atlas",
x = "Our estimates",
col = "SES")+
coord_obs_pred()+
#ylim(0,1)+xlim(0,1)+
theme(legend.position = "bottom")
for(k in 1:8){
rf <- names(raw_est)[k]
rf_full <- lookup[k,]$rf_full
sha_vars = paste0("shaout_", lookup[lookup$rf == rf,]$sha, "_", c("estimate", "lower", "upper"))
message("Started ", k, ": ", rf)
# load data
modelled_est <- readRDS(file = paste0("data/summary_files/", rf, "_b1.rds"))
#modelled_est_nb <- readRDS(file = paste0("data/summary_files/", rf, "_b0.rds"))
## Scatter: SHA PHA vs ACA #### ------------------------------------------------
# pha level
modelled_est$summ$pha %>%
left_join(.,SHA_pha, by = "pha") %>%
ggplot(aes(x = median, xmin = lower, xmax = upper,
y = .data[[sha_vars[1]]],
ymin = .data[[sha_vars[2]]],
ymax = .data[[sha_vars[3]]]))+
theme_bw()+
geom_errorbar(col = "grey")+
geom_errorbarh(col = "grey")+
geom_abline()+
geom_point()+
labs(y = "Social Health Atlas",
x = "Our estimates",
col = "SES")+
coord_obs_pred()+
#ylim(0,1)+xlim(0,1)+
theme(legend.position = "bottom")
# save object
jsave(filename = paste0("scatter_shaphavsaca_pha_", rf ,".png"),
base_folder = paste0(base_folder, "/figures"),
square = F)
}
